{"version":3,"sources":["Pixi.tsx","About.tsx","Certificate.tsx","ResponsiveDrawer.tsx","App.tsx","serviceWorker.ts","utils/getProvider.ts","index.tsx"],"names":["Pixi","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","pixi_cnt","app","updatePixiCnt","element","children","length","appendChild","view","setup","PIXI","width","height","transparent","background","fromImage","stage","addChild","ms","Sprite2d","anchor","set","proj","affine","AFFINE","AXIS_X","position","screen","u1","u2","filters","AlphaFilter","filterArea","guestsArray","guests","i","texture","guest","pluginName","scale","x","Math","floor","random","y","direction","PI","turningSpeed","speed","push","addInteraction","obj","interactive","on","onDragStart","onDragEnd","onDragMove","event","currentTarget","dragData","data","dragging","dragPointerStart","getLocalPosition","parent","dragObjStart","copy","dragGlobalStart","global","stopPropagation","abs","dragPointerEnd","react_default","a","createElement","ref","Component","About","index_es","container","spacing","item","xs","Paper_default","Certificate","viewBox","id","d","xlinkHref","SvgWithXlink","ResponsiveDrawer","state","mobileOpen","handleDrawerToggle","setState","_this$props","classes","theme","drawer","className","toolbar","Divider_default","List_default","ListItem_default","button","key","component","_ref","innerRef","objectWithoutProperties","Link","assign","to","ListItemIcon_default","MoveToInbox_default","ListItemText_default","primary","_ref2","map","text","index","Mail_default","BrowserRouter","root","CssBaseline_default","AppBar_default","appBar","Toolbar_default","IconButton_default","color","aria-label","onClick","menuButton","Menu_default","Typography_default","variant","noWrap","Hidden_default","smUp","implementation","Drawer_default","open","onClose","paper","drawerPaper","xsDown","content","Route","path","exact","React","withStyles","createStyles","display","defineProperty","breakpoints","up","flexShrink","marginLeft","concat","marginRight","mixins","flexGrow","padding","unit","withTheme","createMuiTheme","typography","useNextVariants","palette","pink","App","core_styles","src_ResponsiveDrawer","Boolean","window","location","hostname","match","getProvider","Promise","resolve","reject","addEventListener","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","ethereum","enable","t0","stop","provider","sent","light","setProvider","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iqBA2ReA,6BAhRb,SAAAA,EAAYC,GAAmB,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAC7BE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAJRQ,SAAkC,KAGHP,EAF/BQ,SAE+B,EAAAR,EAS/BS,cAAgB,SAACC,GAEfV,EAAKO,SAAWG,EAEZV,EAAKO,UAAYP,EAAKO,SAASI,SAASC,QAAU,IACpDZ,EAAKO,SAASM,YAAYb,EAAKQ,IAAIM,MAEnCd,EAAKe,UAbPf,EAAKQ,IAAM,IAAIQ,cAAiB,CAC9BC,MAAO,IACPC,OAAQ,IACRC,aAAa,IANcnB,uEAsB7B,IAAIoB,EAAaJ,SAAYK,UACF,oBAE3BD,EAAWH,MAAQ,IACnBG,EAAWF,OAAS,IACpBf,KAAKK,IAAIc,MAAMC,SAASH,GAGtB,IAAII,EAAK,IAAIR,aAAgBS,SAAST,UAAaK,UAAiC,qBACpFG,EAAGE,OAAOC,IAAI,GAAK,GACnBH,EAAGI,KAAKC,OAASb,aAAgBc,OAAOC,OACxCP,EAAGQ,SAASL,IAA4B,EAAxBxB,KAAKK,IAAIyB,OAAOhB,MAAU,EAAGd,KAAKK,IAAIyB,OAAOf,OAAO,EAAE,KACtEf,KAAKK,IAAIc,MAAMC,SAASC,GAGxB,IAAIU,EAAK,IAAIlB,aAAgBS,SAAST,UAAaK,UAAiC,0BACpFa,EAAGR,OAAOC,IAAI,GAAK,GACnBO,EAAGN,KAAKC,OAASb,aAAgBc,OAAOC,OACxCG,EAAGF,SAASL,IAA4B,EAAxBxB,KAAKK,IAAIyB,OAAOhB,MAAU,EAAE,IAAKd,KAAKK,IAAIyB,OAAOf,OAAO,EAAE,KAC1Ef,KAAKK,IAAIc,MAAMC,SAASW,GASxB,IAAIC,EAAK,IAAInB,aAAgBS,SAAST,UAAaK,UAAiC,0BACpFc,EAAGT,OAAOC,IAAI,GAAK,GACnBQ,EAAGP,KAAKC,OAASb,aAAgBc,OAAOC,OACxCI,EAAGH,SAASL,IAA4B,EAAxBxB,KAAKK,IAAIyB,OAAOhB,MAAU,EAAE,IAAKd,KAAKK,IAAIyB,OAAOf,OAAO,EAAE,KAC1Ef,KAAKK,IAAIc,MAAMC,SAASY,GAG1BhC,KAAKK,IAAIc,MAAMc,QAAU,CAAC,IAAIpB,UAAaqB,aAC3ClC,KAAKK,IAAIc,MAAMgB,WAAanC,KAAKK,IAAIyB,OAsBnC,IAnBF,IAAIM,EAA6B,GAC7BC,EAAS,CACT,sFACA,sFACA,sFACA,sFACA,sFACA,sFACA,sFACA,sFACA,sFACA,sFACA,sFACA,sFACA,sFACA,iFAIOC,EAAI,EAAGA,EAAID,EAAO5B,OAAQ6B,IAAK,CAEpC,IAAIC,EAAU1B,UAAaK,UAAUmB,EAAOC,IAExCE,EAAQ,IAAI3B,SAAY0B,GAE5BC,EAAMC,WAAa,UAEnBD,EAAMjB,OAAOC,IAAI,IAGjBgB,EAAME,MAAMlB,IAAI,IAGhBgB,EAAMG,EAAIC,KAAKC,MAAMD,KAAKE,SAAW9C,KAAKK,IAAIyB,OAAOhB,OACrD0B,EAAMO,EAAIH,KAAKC,MAAOD,KAAKE,UAAY9C,KAAKK,IAAIyB,OAAOf,OAAO,EAAE,KAAMf,KAAKK,IAAIyB,OAAOf,OAAO,EAAE,KAS9FyB,EAAcQ,UAAYJ,KAAKE,SAAWF,KAAKK,GAAK,EAGpDT,EAAcU,aAAeN,KAAKE,SAAW,GAG7CN,EAAcW,MAAQ,EAAoB,EAAhBP,KAAKE,SAGhCV,EAAYgB,KAAKZ,GACjBxC,KAAKqD,eAAeb,GACpBxC,KAAKK,IAAIc,MAAMC,SAASoB,2CA2Ffc,GACXA,EAAIC,aAAc,EAClBD,EACKE,GAAG,cAAexD,KAAKyD,aACvBD,GAAG,YAAaxD,KAAK0D,WACrBF,GAAG,mBAAoBxD,KAAK0D,WAC5BF,GAAG,cAAexD,KAAK2D,gDAGpBC,GACR,IAAIN,EAAMM,EAAMC,cAChBP,EAAIQ,SAAWF,EAAMG,KACrBT,EAAIU,SAAW,EACfV,EAAIW,iBAAmBL,EAAMG,KAAKG,iBAAiBZ,EAAIa,QACvDb,EAAIc,aAAe,IAAIvD,QACvByC,EAAIc,aAAaC,KAAKf,EAAIzB,UAC1ByB,EAAIgB,gBAAkB,IAAIzD,QAC1ByC,EAAIgB,gBAAgBD,KAAKT,EAAMG,KAAKQ,QACpCX,EAAMY,oDAIAZ,GACN,IAAIN,EAAMM,EAAMC,cACXP,EAAIU,WACLV,EAAIU,SAMRV,EAAIU,SAAW,EACfV,EAAIQ,SAAW,KAEfF,EAAMY,sDAICZ,GACP,IAAIN,EAAMM,EAAMC,cAChB,GAAKP,EAAIU,SAAT,CACAJ,EAAMY,kBACN,IAAIT,EAAOT,EAAIQ,SASf,GARoB,GAAhBR,EAAIU,UAEApB,KAAK6B,IAAIV,EAAKQ,OAAO5B,EAAIW,EAAIgB,gBAAgB3B,GAC7CC,KAAK6B,IAAIV,EAAKQ,OAAOxB,EAAIO,EAAIgB,gBAAgBvB,IAAM,IAEnDO,EAAIU,SAAW,GAGH,GAAhBV,EAAIU,SAAe,CACnB,IAAIU,EAAiBX,EAAKG,iBAAiBZ,EAAIa,QAE/Cb,EAAIzB,SAASL,IACT8B,EAAIc,aAAazB,GAAK+B,EAAe/B,EAAIW,EAAIW,iBAAiBtB,GAC9DW,EAAIc,aAAarB,GAAK2B,EAAe3B,EAAIO,EAAIW,iBAAiBlB,uCAM1E,OAAO4B,EAAAC,EAAAC,cAAA,OAAKC,IAAK9E,KAAKM,uBAhRPyE,mDCuCJC,oLArCX,OAAOL,EAAAC,EAAAC,cAAA,WAEHF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,IACrBR,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACXV,EAAAC,EAAAC,cAACS,GAAAV,EAAD,KACED,EAAAC,EAAAC,cAAA,qBAKNF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACXV,EAAAC,EAAAC,cAACS,GAAAV,EAAD,cAEJD,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACXV,EAAAC,EAAAC,cAACS,GAAAV,EAAD,cAEJD,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACXV,EAAAC,EAAAC,cAACS,GAAAV,EAAD,cAEJD,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACXV,EAAAC,EAAAC,cAACS,GAAAV,EAAD,cAEJD,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACXV,EAAAC,EAAAC,cAACS,GAAAV,EAAD,cAEJD,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACXV,EAAAC,EAAAC,cAACS,GAAAV,EAAD,cAEJD,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACXV,EAAAC,EAAAC,cAACS,GAAAV,EAAD,wBAjCIG,aC4ELQ,+OA1DP,OACIZ,EAAAC,EAAAC,cAAA,OAAKW,QAAQ,eACTb,EAAAC,EAAAC,cAAA,QAAMY,GAAG,QAAQC,EAAE,yEACnBf,EAAAC,EAAAC,cAAA,QAAM/D,MAAM,OACR6D,EAAAC,EAAAC,cAAA,YAAUc,UAAY,UAAtB,mDAShB,OAAOhB,EAAAC,EAAAC,cAAA,WAEHF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,IACrBR,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACXV,EAAAC,EAAAC,cAACS,GAAAV,EAAD,eAEJD,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACXV,EAAAC,EAAAC,cAACS,GAAAV,EAAD,cAEJD,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACXV,EAAAC,EAAAC,cAACS,GAAAV,EAAD,KACK5E,KAAK4F,iBAGdjB,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACXV,EAAAC,EAAAC,cAACS,GAAAV,EAAD,cAGJD,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACXV,EAAAC,EAAAC,cAACS,GAAAV,EAAD,cAEJD,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACXV,EAAAC,EAAAC,cAACS,GAAAV,EAAD,cAEJD,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACXV,EAAAC,EAAAC,cAACS,GAAAV,EAAD,cAEJD,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACXV,EAAAC,EAAAC,cAACS,GAAAV,EAAD,cAEJD,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACXV,EAAAC,EAAAC,cAACS,GAAAV,EAAD,cAEJD,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACXV,EAAAC,EAAAC,cAACS,GAAAV,EAAD,cAEJD,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACXV,EAAAC,EAAAC,cAACS,GAAAV,EAAD,wBAjEUG,cC+DpBc,8MAIJC,MAAQ,CACNC,YAAY,KAGdC,mBAAqB,WACnBnG,EAAKoG,SAAS,SAAAH,GAAK,MAAK,CAAEC,YAAaD,EAAMC,uFAGtC,IAAAG,EACoBlG,KAAKJ,MAAxBuG,EADDD,EACCC,QAASC,EADVF,EACUE,MAEXC,EACJ1B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKyB,UAAWH,EAAQI,UACxB5B,EAAAC,EAAAC,cAAC2B,EAAA5B,EAAD,MACAD,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,KACED,EAAAC,EAAAC,cAAC6B,EAAA9B,EAAD,CACE+B,QAAM,EACNC,IAAK,QACLC,UAAW,SAAAC,KAAGC,SAAH,IAAgBnH,EAAhBE,OAAAkH,EAAA,EAAAlH,CAAAgH,EAAA,qBACTnC,EAAAC,EAAAC,cAACoC,EAAA,EAADnH,OAAAoH,OAAA,GAAUtH,EAAV,CAAiBuH,GAAG,cAGtBxC,EAAAC,EAAAC,cAACuC,EAAAxC,EAAD,KACED,EAAAC,EAAAC,cAACwC,EAAAzC,EAAD,OAEFD,EAAAC,EAAAC,cAACyC,EAAA1C,EAAD,CAAc2C,QAAS,WAEvB5C,EAAAC,EAAAC,cAAC6B,EAAA9B,EAAD,CACI+B,QAAM,EACNC,IAAK,cACLC,UAAW,SAAAW,KAAGT,SAAH,IAAgBnH,EAAhBE,OAAAkH,EAAA,EAAAlH,CAAA0H,EAAA,qBACP7C,EAAAC,EAAAC,cAACoC,EAAA,EAADnH,OAAAoH,OAAA,GAAUtH,EAAV,CAAiBuH,GAAG,oBAGxBxC,EAAAC,EAAAC,cAACuC,EAAAxC,EAAD,KACID,EAAAC,EAAAC,cAACwC,EAAAzC,EAAD,OAEJD,EAAAC,EAAAC,cAACyC,EAAA1C,EAAD,CAAc2C,QAAS,iBAG5B,CAAC,WAAY,OAAQ,UAAUE,IAAI,SAACC,EAAMC,GAAP,OAClChD,EAAAC,EAAAC,cAAC6B,EAAA9B,EAAD,CAAU+B,QAAM,EAACC,IAAKc,GACpB/C,EAAAC,EAAAC,cAACuC,EAAAxC,EAAD,KACG+C,EAAQ,IAAM,EAAIhD,EAAAC,EAAAC,cAACwC,EAAAzC,EAAD,MAAgBD,EAAAC,EAAAC,cAAC+C,EAAAhD,EAAD,OAErCD,EAAAC,EAAAC,cAACyC,EAAA1C,EAAD,CAAc2C,QAASG,QAI7B/C,EAAAC,EAAAC,cAAC2B,EAAA5B,EAAD,MACAD,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,KACG,CAAC,YAAY6C,IAAI,SAACC,EAAMC,GAAP,OAChBhD,EAAAC,EAAAC,cAAC6B,EAAA9B,EAAD,CAAU+B,QAAM,EAACC,IAAKc,GACpB/C,EAAAC,EAAAC,cAACuC,EAAAxC,EAAD,KACG+C,EAAQ,IAAM,EAAIhD,EAAAC,EAAAC,cAACwC,EAAAzC,EAAD,MAAgBD,EAAAC,EAAAC,cAAC+C,EAAAhD,EAAD,OAErCD,EAAAC,EAAAC,cAACyC,EAAA1C,EAAD,CAAc2C,QAASG,SAOjC,OACE/C,EAAAC,EAAAC,cAACgD,EAAA,EAAD,KACElD,EAAAC,EAAAC,cAAA,OAAKyB,UAAWH,EAAQ2B,MACtBnD,EAAAC,EAAAC,cAACkD,EAAAnD,EAAD,MACAD,EAAAC,EAAAC,cAACmD,EAAApD,EAAD,CAAQ/C,SAAS,QAAQyE,UAAWH,EAAQ8B,QAC1CtD,EAAAC,EAAAC,cAACqD,EAAAtD,EAAD,KACED,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CACEwD,MAAM,UACNC,aAAW,cACXC,QAAStI,KAAKgG,mBACdM,UAAWH,EAAQoC,YAEnB5D,EAAAC,EAAAC,cAAC2D,EAAA5D,EAAD,OAEFD,EAAAC,EAAAC,cAAC4D,EAAA7D,EAAD,CAAY8D,QAAQ,KAAKN,MAAM,UAAUO,QAAM,GAA/C,mBAKJhE,EAAAC,EAAAC,cAAA,OAAKyB,UAAWH,EAAQE,QAEtB1B,EAAAC,EAAAC,cAAC+D,EAAAhE,EAAD,CAAQiE,MAAI,EAACC,eAAe,OAC1BnE,EAAAC,EAAAC,cAACkE,EAAAnE,EAAD,CACE8D,QAAQ,YACRnH,OAA4B,QAApB6E,EAAMpD,UAAsB,QAAU,OAC9CgG,KAAMhJ,KAAK8F,MAAMC,WACjBkD,QAASjJ,KAAKgG,mBACdG,QAAS,CACP+C,MAAO/C,EAAQgD,cAGhB9C,IAGL1B,EAAAC,EAAAC,cAAC+D,EAAAhE,EAAD,CAAQwE,QAAM,EAACN,eAAe,OAC5BnE,EAAAC,EAAAC,cAACkE,EAAAnE,EAAD,CACEuB,QAAS,CACP+C,MAAO/C,EAAQgD,aAEjBT,QAAQ,YACRM,MAAI,GAEH3C,KAIP1B,EAAAC,EAAAC,cAAA,QAAMyB,UAAWH,EAAQkD,SACvB1E,EAAAC,EAAAC,cAAA,OAAKyB,UAAWH,EAAQI,UACxB5B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAAC3C,UAAWlH,IACjCgF,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAOC,KAAK,UAAU1C,UAAW7B,KACjCL,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAOC,KAAK,gBAAgB1C,UAAWtB,gBAvHtBkE,IAAM1E,WAgItB2E,wBAzKA,SAACtD,GAAD,OACbuD,uBAAa,CACX7B,KAAM,CACJ8B,QAAS,QAEXvD,OAAOvG,OAAA+J,EAAA,EAAA/J,CAAA,GACJsG,EAAM0D,YAAYC,GAAG,MAAQ,CAC5BjJ,MATY,IAUZkJ,WAAY,IAGhB/B,OAAOnI,OAAA+J,EAAA,EAAA/J,CAAA,CACLmK,WAdc,KAeb7D,EAAM0D,YAAYC,GAAG,MAAQ,CAC5BjJ,MAAK,eAAAoJ,OAhBO,IAgBP,SAGT3B,WAAWzI,OAAA+J,EAAA,EAAA/J,CAAA,CACTqK,YAAa,IACZ/D,EAAM0D,YAAYC,GAAG,MAAQ,CAC5BH,QAAS,SAGbrD,QAASH,EAAMgE,OAAO7D,QACtB4C,YAAa,CACXrI,MA3Bc,KA6BhBuI,QAAS,CACPgB,SAAU,EACVC,QAA8B,EAArBlE,EAAMjB,QAAQoF,SA4IK,CAAEC,WAAW,GAAhCd,CAAwC7D,cC9LjDO,GAAQqE,yBAAe,CAC3BC,WAAY,CACVC,iBAAiB,GAEnBC,QAAS,CACPrD,QAASsD,WAcEC,oLARX,OACEnG,EAAAC,EAAAC,cAACkG,EAAA,iBAAD,CAAkB3E,MAAOA,IACvBzB,EAAAC,EAAAC,cAACmG,GAAD,cAJUjG,aCNEkG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DClBN,IAoBeC,GApBK,kBAClB,IAAIC,QAAQ,SAACC,EAASC,GAEpBP,OAAOQ,iBAAiB,OAAxB5L,OAAA6L,EAAA,EAAA7L,CAAA8L,EAAAhH,EAAAiH,KAAgC,SAAAC,IAAA,OAAAF,EAAAhH,EAAAmH,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WAEpBhB,OAAQiB,SAFY,CAAAH,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAKdhB,OAAQiB,SAASC,SALH,OAO1BZ,EAAcN,OAAQiB,UAPIH,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAS1BP,EAAMO,EAAAK,IAToB,QAAAL,EAAAE,KAAA,iBAY5BT,EAAO,6BAZqB,yBAAAO,EAAAM,SAAAR,EAAA,0CCMpChM,OAAA6L,EAAA,EAAA7L,CAAA8L,EAAAhH,EAAAiH,KAAC,SAAAC,IAAA,IAAAS,EAAA,OAAAX,EAAAhH,EAAAmH,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACwBZ,KADxB,OACOiB,EADPP,EAAAQ,KAECC,KAAMC,YAAYH,GAElBI,IAASC,OAAOjI,EAAAC,EAAAC,cAACgI,GAAD,MAASC,SAASC,eAAe,SF4H7C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,eElIlB,wBAAArB,EAAAM,SAAAR,KAADhM","file":"static/js/main.31e8a354.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport * as PIXI from \"pixi.js\";\r\nimport \"pixi-picture\";\r\nimport \"pixi-projection\";\r\n\r\nexport interface IPixiProps {}\r\n\r\nclass Pixi extends Component<IPixiProps> {\r\n  pixi_cnt: HTMLDivElement | null = null;\r\n  app: PIXI.Application;\r\n\r\n  constructor(props: IPixiProps) {\r\n    super(props);\r\n\r\n    this.app = new PIXI.Application({\r\n      width: 800,\r\n      height: 600,\r\n      transparent: false\r\n    });\r\n  }\r\n  updatePixiCnt = (element: HTMLDivElement) => {\r\n    // the element is the DOM object that we will use as container to add pixi stage(canvas)\r\n    this.pixi_cnt = element;\r\n    //now we are adding the application to the DOM element which we got from the Ref.\r\n    if (this.pixi_cnt && this.pixi_cnt.children.length <= 0) {\r\n      this.pixi_cnt.appendChild(this.app.view);\r\n      //The setup function is a custom function that we created to add the sprites. We will this below\r\n      this.setup();\r\n    }\r\n  };\r\n\r\n  setup() {\r\n    // create a new background sprite\r\n    var background = PIXI.Sprite.fromImage(\r\n      process.env.PUBLIC_URL + \"/assets/bg01.jpg\"\r\n    );\r\n    background.width = 800;\r\n    background.height = 600;\r\n    this.app.stage.addChild(background);\r\n\r\n\r\n      var ms = new PIXI.projection.Sprite2d(PIXI.Texture.fromImage(process.env.PUBLIC_URL+'/assets/ms01.png'));\r\n      ms.anchor.set(0.5, 1.0);\r\n      ms.proj.affine = PIXI.projection.AFFINE.AXIS_X; // return to affine after rotating\r\n      ms.position.set(this.app.screen.width * 1/2, this.app.screen.height/2+100);\r\n      this.app.stage.addChild(ms);\r\n\r\n    // create\r\n      var u1 = new PIXI.projection.Sprite2d(PIXI.Texture.fromImage(process.env.PUBLIC_URL+'/assets/flowerTop.png'));\r\n      u1.anchor.set(0.5, 1.0);\r\n      u1.proj.affine = PIXI.projection.AFFINE.AXIS_X; // return to affine after rotating\r\n      u1.position.set(this.app.screen.width * 1/2+100, this.app.screen.height/2+100);\r\n      this.app.stage.addChild(u1);\r\n\r\n      /*var step = 0;\r\n      this.app.ticker.add((delta) => {\r\n          step += delta;\r\n          u1.rotation = step * 0.1;\r\n          //u1.rotation = Math.round(step)%2 == 0 ? 1.0 * 0.1 : 0.0 * 0.1;\r\n      });*/\r\n\r\n      var u2 = new PIXI.projection.Sprite2d(PIXI.Texture.fromImage(process.env.PUBLIC_URL+'/assets/flowerTop.png'));\r\n      u2.anchor.set(0.5, 1.0);\r\n      u2.proj.affine = PIXI.projection.AFFINE.AXIS_X; // return to affine after rotating\r\n      u2.position.set(this.app.screen.width * 1/2-100, this.app.screen.height/2+100);\r\n      this.app.stage.addChild(u2);\r\n\r\n    //speed up the process, because OVERLAY and HARD_LIGHT will use copyTex instead of readPixels\r\n    this.app.stage.filters = [new PIXI.filters.AlphaFilter()];\r\n    this.app.stage.filterArea = this.app.screen;\r\n\r\n    // create an array to store a reference to the guests\r\n    var guestsArray: PIXI.Sprite[] = [];\r\n    var guests = [\r\n        \"https://img.cryptokitties.co/0x06012c8cf97bead5deae237070f9587f8e7a266d/1449319.png\",\r\n        \"https://img.cryptokitties.co/0x06012c8cf97bead5deae237070f9587f8e7a266d/1408319.png\",\r\n        \"https://img.cryptokitties.co/0x06012c8cf97bead5deae237070f9587f8e7a266d/1407319.png\",\r\n        \"https://img.cryptokitties.co/0x06012c8cf97bead5deae237070f9587f8e7a266d/1111111.png\",\r\n        \"https://img.cryptokitties.co/0x06012c8cf97bead5deae237070f9587f8e7a266d/1111110.png\",\r\n        \"https://img.cryptokitties.co/0x06012c8cf97bead5deae237070f9587f8e7a266d/1300309.png\",\r\n        \"https://img.cryptokitties.co/0x06012c8cf97bead5deae237070f9587f8e7a266d/1410109.png\",\r\n        \"https://img.cryptokitties.co/0x06012c8cf97bead5deae237070f9587f8e7a266d/1300109.png\",\r\n        \"https://img.cryptokitties.co/0x06012c8cf97bead5deae237070f9587f8e7a266d/1200109.png\",\r\n        \"https://img.cryptokitties.co/0x06012c8cf97bead5deae237070f9587f8e7a266d/1411119.png\",\r\n        \"https://img.cryptokitties.co/0x06012c8cf97bead5deae237070f9587f8e7a266d/1200000.png\",\r\n        \"https://img.cryptokitties.co/0x06012c8cf97bead5deae237070f9587f8e7a266d/1200001.png\",\r\n        \"https://img.cryptokitties.co/0x06012c8cf97bead5deae237070f9587f8e7a266d/1000000.png\",\r\n        \"https://img.cryptokitties.co/0x06012c8cf97bead5deae237070f9587f8e7a266d/1.png\"\r\n    ];\r\n\r\n\r\n      for (var i = 0; i < guests.length; i++) {\r\n\r\n          var texture = PIXI.Texture.fromImage(guests[i]);\r\n          // create a new Sprite that uses the image name that we just generated as its source\r\n          var guest = new PIXI.Sprite(texture);\r\n          // setting renderer plugin 'picture', from pixi-picture\r\n          guest.pluginName = \"picture\";\r\n\r\n          guest.anchor.set(0.5);\r\n\r\n          // set a random scale for the dude\r\n          guest.scale.set(0.1);\r\n\r\n          // finally let's set the dude to be at a random position...\r\n          guest.x = Math.floor(Math.random() * this.app.screen.width);\r\n          guest.y = Math.floor((Math.random() * (this.app.screen.height/2-100))+this.app.screen.height/2+120);\r\n\r\n          // The important bit of this example, this is how you change the default blend mode of the sprite\r\n          /*guest.blendMode =\r\n              Math.random() > 0.5\r\n                  ? PIXI.BLEND_MODES.OVERLAY\r\n                  : PIXI.BLEND_MODES.HARD_LIGHT;*/\r\n\r\n          // create some extra properties that will control movement\r\n          (guest as any).direction = Math.random() * Math.PI * 2;\r\n\r\n          // this number will be used to modify the direction of the dude over time\r\n          (guest as any).turningSpeed = Math.random() - 0.8;\r\n\r\n          // create a random speed for the dude between 0 - 2\r\n          (guest as any).speed = 2 + Math.random() * 2;\r\n\r\n          // finally we push the dude into the dudeArray so it it can be easily accessed later\r\n          guestsArray.push(guest);\r\n          this.addInteraction(guest);\r\n          this.app.stage.addChild(guest);\r\n      }\r\n\r\n/*\r\n    // create an array to store a reference to the dudes\r\n    var dudeArray: PIXI.Sprite[] = [];\r\n\r\n    var totaldudes = 20;\r\n    //var texture = PIXI.Texture.fromImage('flowerTop.png');\r\n    var texture = PIXI.Texture.fromImage(\r\n      \"https://img.cryptokitties.co/0x06012c8cf97bead5deae237070f9587f8e7a266d/1439319.png\"\r\n    );\r\n    for (var i = 0; i < totaldudes; i++) {\r\n      // create a new Sprite that uses the image name that we just generated as its source\r\n      var dude = new PIXI.Sprite(texture);\r\n      // setting renderer plugin 'picture', from pixi-picture\r\n      dude.pluginName = \"picture\";\r\n\r\n      dude.anchor.set(0.5);\r\n\r\n      // set a random scale for the dude\r\n      dude.scale.set(0.2);\r\n\r\n      // finally let's set the dude to be at a random position...\r\n      dude.x = Math.floor(Math.random() * this.app.screen.width);\r\n      dude.y = Math.floor(Math.random() * this.app.screen.height);\r\n\r\n      // The important bit of this example, this is how you change the default blend mode of the sprite\r\n      dude.blendMode =\r\n        Math.random() > 0.5\r\n          ? PIXI.BLEND_MODES.OVERLAY\r\n          : PIXI.BLEND_MODES.HARD_LIGHT;\r\n\r\n      // create some extra properties that will control movement\r\n      (dude as any).direction = Math.random() * Math.PI * 2;\r\n\r\n      // this number will be used to modify the direction of the dude over time\r\n      (dude as any).turningSpeed = Math.random() - 0.8;\r\n\r\n      // create a random speed for the dude between 0 - 2\r\n      (dude as any).speed = 2 + Math.random() * 2;\r\n\r\n      // finally we push the dude into the dudeArray so it it can be easily accessed later\r\n      dudeArray.push(dude);\r\n\r\n      this.app.stage.addChild(dude);\r\n    }\r\n\r\n    // create a bounding box box for the little dudes\r\n    var dudeBoundsPadding = 100;\r\n\r\n    var dudeBounds = new PIXI.Rectangle(\r\n      -dudeBoundsPadding,\r\n      -dudeBoundsPadding,\r\n      this.app.screen.width + dudeBoundsPadding * 2,\r\n      this.app.screen.height + dudeBoundsPadding * 2\r\n    );\r\n\r\n    var tick = 0;\r\n\r\n    this.app.ticker.add(function() {\r\n      // iterate through the dudes and update the positions\r\n      for (var i = 0; i < dudeArray.length; i++) {\r\n        var dude = dudeArray[i];\r\n        (dude as any).direction += (dude as any).turningSpeed * 0.01;\r\n        dude.x += Math.sin((dude as any).direction) * (dude as any).speed;\r\n        dude.y += Math.cos((dude as any).direction) * (dude as any).speed;\r\n        dude.rotation = -(dude as any).direction - Math.PI / 2;\r\n\r\n        // wrap the dudes by testing their bounds...\r\n        if (dude.x < dudeBounds.x) {\r\n          dude.x += dudeBounds.width;\r\n        } else if (dude.x > dudeBounds.x + dudeBounds.width) {\r\n          dude.x -= dudeBounds.width;\r\n        }\r\n\r\n        if (dude.y < dudeBounds.y) {\r\n          dude.y += dudeBounds.height;\r\n        } else if (dude.y > dudeBounds.y + dudeBounds.height) {\r\n          dude.y -= dudeBounds.height;\r\n        }\r\n      }\r\n\r\n      // increment the ticker\r\n      tick += 0.1;\r\n    });\r\n    */\r\n  }\r\n\r\n    // === INTERACTION CODE  ===\r\n\r\n    addInteraction(obj:any) {\r\n        obj.interactive = true;\r\n        obj\r\n            .on('pointerdown', this.onDragStart)\r\n            .on('pointerup', this.onDragEnd)\r\n            .on('pointerupoutside', this.onDragEnd)\r\n            .on('pointermove', this.onDragMove);\r\n    }\r\n\r\n    onDragStart(event:any) {\r\n        var obj = event.currentTarget;\r\n        obj.dragData = event.data;\r\n        obj.dragging = 1;\r\n        obj.dragPointerStart = event.data.getLocalPosition(obj.parent);\r\n        obj.dragObjStart = new PIXI.Point();\r\n        obj.dragObjStart.copy(obj.position);\r\n        obj.dragGlobalStart = new PIXI.Point();\r\n        obj.dragGlobalStart.copy(event.data.global);\r\n        event.stopPropagation();\r\n    }\r\n\r\n\r\n    onDragEnd(event:any) {\r\n        var obj = event.currentTarget;\r\n        if (!obj.dragging) return;\r\n        if (obj.dragging == 1) {\r\n            //toggle(obj);\r\n        } else {\r\n            //snap(obj);\r\n        }\r\n\r\n        obj.dragging = 0;\r\n        obj.dragData = null;\r\n\r\n        event.stopPropagation();\r\n        // set the interaction data to null\r\n    }\r\n\r\n    onDragMove(event:any) {\r\n        var obj = event.currentTarget;\r\n        if (!obj.dragging) return;\r\n        event.stopPropagation();\r\n        var data = obj.dragData; // it can be different pointer!\r\n        if (obj.dragging == 1) {\r\n            // click or drag?\r\n            if (Math.abs(data.global.x - obj.dragGlobalStart.x) +\r\n                Math.abs(data.global.y - obj.dragGlobalStart.y) >= 3) {\r\n                // DRAG\r\n                obj.dragging = 2;\r\n            }\r\n        }\r\n        if (obj.dragging == 2) {\r\n            var dragPointerEnd = data.getLocalPosition(obj.parent);\r\n            // DRAG\r\n            obj.position.set(\r\n                obj.dragObjStart.x + (dragPointerEnd.x - obj.dragPointerStart.x),\r\n                obj.dragObjStart.y + (dragPointerEnd.y - obj.dragPointerStart.y)\r\n            );\r\n        }\r\n    }\r\n\r\n  render() {\r\n    return <div ref={this.updatePixiCnt} />;\r\n  }\r\n}\r\n\r\nexport default Pixi;\r\n","import React, { Component } from \"react\";\r\nimport \"./About.css\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport Paper from \"@material-ui/core/Paper/Paper\";\r\n\r\nclass About extends Component {\r\n\r\n\r\n  render() {\r\n    return <div>\r\n\r\n        <Grid container spacing={24}>\r\n            <Grid item xs={12}>\r\n                <Paper >\r\n                  <h1>About</h1>\r\n                </Paper>\r\n            </Grid>\r\n\r\n\r\n            <Grid item xs={6}>\r\n                <Paper >xs=6</Paper>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <Paper >xs=6</Paper>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n                <Paper >xs=3</Paper>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n                <Paper >xs=3</Paper>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n                <Paper >xs=3</Paper>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n                <Paper>xs=3</Paper>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Paper >xs=12</Paper>\r\n            </Grid>\r\n        </Grid>\r\n\r\n    </div>;\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from \"react\";\r\nimport \"./Certificate.css\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport Paper from \"@material-ui/core/Paper/Paper\";\r\nimport {Howl, Howler} from 'howler';\r\n\r\n\r\n\r\nclass Certificate extends Component {\r\n\r\n    componentDidMount(){\r\n        /*var sound = new Howl({\r\n            src: ['audio/01.mp3'],\r\n            autoplay: true,\r\n            loop: true,\r\n            volume: 0.5,\r\n            onend: function() {\r\n                console.log('Finished!');\r\n            }\r\n        });*/\r\n    }\r\n\r\n     SvgWithXlink () {\r\n        return (\r\n            <svg viewBox=\"0 0 500 500\">\r\n                <path id=\"curve\" d=\"M73.2,148.6c4-6.1,65.5-96.8,178.6-95.6c111.3,1.2,170.8,90.3,175.1,97\" />\r\n                <text width=\"500\">\r\n                    <textPath xlinkHref={ \"#curve\" }>\r\n                        &nbsp;Marriage\r\n                    </textPath>\r\n                </text>\r\n            </svg>\r\n        );\r\n    }\r\n\r\n  render() {\r\n    return <div>\r\n\r\n        <Grid container spacing={24}>\r\n            <Grid item xs={12}>\r\n                <Paper >xs=12</Paper>\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n                <Paper >xs=2</Paper>\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n                <Paper>\r\n                    {this.SvgWithXlink()}\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n                <Paper >xs=2</Paper>\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n                <Paper >xs=6</Paper>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <Paper >xs=6</Paper>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n                <Paper >xs=3</Paper>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n                <Paper >xs=3</Paper>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n                <Paper >xs=3</Paper>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n                <Paper>xs=3</Paper>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Paper >xs=12</Paper>\r\n            </Grid>\r\n        </Grid>\r\n\r\n    </div>;\r\n  }\r\n}\r\n\r\nexport default Certificate;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {\r\n  withStyles,\r\n  createStyles,\r\n  Theme,\r\n  WithStyles,\r\n  WithTheme\r\n} from \"@material-ui/core/styles\";\r\nimport Pixi from \"./Pixi\";\r\nimport About from \"./About\";\r\nimport Certificate from \"./Certificate\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\"\r\n    },\r\n    drawer: {\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: drawerWidth,\r\n        flexShrink: 0\r\n      }\r\n    },\r\n    appBar: {\r\n      marginLeft: drawerWidth,\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: `calc(100% - ${drawerWidth}px)`\r\n      }\r\n    },\r\n    menuButton: {\r\n      marginRight: 20,\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        display: \"none\"\r\n      }\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n      width: drawerWidth\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing.unit * 3\r\n    }\r\n  });\r\n\r\nexport interface IResponsiveDrawerProps\r\n  extends WithStyles<typeof styles>,\r\n    WithTheme {}\r\n\r\nexport interface IResponsiveDrawerState {\r\n  mobileOpen: boolean;\r\n}\r\n\r\nclass ResponsiveDrawer extends React.Component<\r\n  IResponsiveDrawerProps,\r\n  IResponsiveDrawerState\r\n> {\r\n  state = {\r\n    mobileOpen: false\r\n  };\r\n\r\n  handleDrawerToggle = () => {\r\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\r\n  };\r\n\r\n  render() {\r\n    const { classes, theme } = this.props;\r\n\r\n    const drawer = (\r\n      <div>\r\n        <div className={classes.toolbar} />\r\n        <Divider />\r\n        <List>\r\n          <ListItem\r\n            button\r\n            key={\"About\"}\r\n            component={({ innerRef, ...props }) => (\r\n              <Link {...props} to=\"/about\" />\r\n            )}\r\n          >\r\n            <ListItemIcon>\r\n              <InboxIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={\"About\"} />\r\n          </ListItem>\r\n            <ListItem\r\n                button\r\n                key={\"Certificate\"}\r\n                component={({ innerRef, ...props }) => (\r\n                    <Link {...props} to=\"/certificate\" />\r\n                )}\r\n            >\r\n                <ListItemIcon>\r\n                    <InboxIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary={\"Certificate\"} />\r\n            </ListItem>\r\n\r\n          {[\"Upcoming\", \"Past\", \"Create\"].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>\r\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n              </ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {[\"All mail\"].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>\r\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n              </ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <Router>\r\n        <div className={classes.root}>\r\n          <CssBaseline />\r\n          <AppBar position=\"fixed\" className={classes.appBar}>\r\n            <Toolbar>\r\n              <IconButton\r\n                color=\"inherit\"\r\n                aria-label=\"Open drawer\"\r\n                onClick={this.handleDrawerToggle}\r\n                className={classes.menuButton}\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                cryptowedding\r\n              </Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <nav className={classes.drawer}>\r\n            {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n            <Hidden smUp implementation=\"css\">\r\n              <Drawer\r\n                variant=\"temporary\"\r\n                anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\r\n                open={this.state.mobileOpen}\r\n                onClose={this.handleDrawerToggle}\r\n                classes={{\r\n                  paper: classes.drawerPaper\r\n                }}\r\n              >\r\n                {drawer}\r\n              </Drawer>\r\n            </Hidden>\r\n            <Hidden xsDown implementation=\"css\">\r\n              <Drawer\r\n                classes={{\r\n                  paper: classes.drawerPaper\r\n                }}\r\n                variant=\"permanent\"\r\n                open\r\n              >\r\n                {drawer}\r\n              </Drawer>\r\n            </Hidden>\r\n          </nav>\r\n          <main className={classes.content}>\r\n            <div className={classes.toolbar} />\r\n            <div>\r\n              <Route path=\"/\" exact component={Pixi} />\r\n              <Route path=\"/about/\" component={About} />\r\n              <Route path=\"/certificate/\" component={Certificate} />\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(ResponsiveDrawer);\r\n","import React, { Component } from \"react\";\r\n\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport MyComponent from \"./MyComponent\";\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core\";\r\nimport ResponsiveDrawer from \"./ResponsiveDrawer\";\r\nimport { pink } from \"@material-ui/core/colors\";\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    useNextVariants: true\r\n  },\r\n  palette: {\r\n    primary: pink\r\n  }\r\n});\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <ResponsiveDrawer />\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n//    <MyComponent address=\"0x9FCaFcca8aec0367abB35fBd161c241f7b79891B\" />\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const getProvider = () =>\r\n  new Promise((resolve, reject) => {\r\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\r\n    window.addEventListener(\"load\", async () => {\r\n      // Modern dapp browsers...\r\n      if ((<any>window).ethereum) {\r\n        try {\r\n          // Request account access if needed\r\n          await (<any>window).ethereum.enable();\r\n          // Acccounts now exposed\r\n          resolve((<any>window).ethereum);\r\n        } catch (error) {\r\n          reject(error);\r\n        }\r\n      } else {\r\n        reject(\"window.ethereum not found\");\r\n      }\r\n    });\r\n  });\r\n\r\nexport default getProvider;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport getProvider from \"./utils/getProvider\";\r\nimport light from \"@parity/light.js\";\r\n\r\n(async () => {\r\n  const provider = await getProvider();\r\n  light.setProvider(provider);\r\n\r\n  ReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n  // If you want your app to work offline and load faster, you can change\r\n  // unregister() to register() below. Note this comes with some pitfalls.\r\n  // Learn more about service workers: https://bit.ly/CRA-PWA\r\n  serviceWorker.unregister();\r\n})();\r\n"],"sourceRoot":""}